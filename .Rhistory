iplot(dataset$pressure,dataset$temp,"P","T")
iplot(dataset$pressure,dataset$teg,"P","Y")
iplot(dataset$temp,dataset$teg,"T","Y")
source("./R/00_load_and_normalize.R")
dataset = subset(dataset,teg > 0.97)
dataset_norm = data.frame(apply(dataset,2, scale))
dataset$teg = -log(dataset$teg)
iplot(dataset$pressure,dataset$temp,"P","T")
iplot(dataset$pressure,dataset$teg,"P","Y")
iplot(dataset$temp,dataset$teg,"T","Y")
source("./R/00_load_and_normalize.R")
dataset = subset(dataset,teg > 0.97)
dataset_norm = data.frame(apply(dataset,2, scale))
# dataset$teg = -log(dataset$teg)
iplot(dataset$pressure,dataset$temp,"P","T")
iplot(dataset$pressure,dataset$teg,"P","Y")
iplot(dataset$temp,dataset$teg,"T","Y")
summary(dataset)
cor(dataset$teg,dataset$temp)
cor(dataset$teg,log(dataset$temp))
cor(dataset$teg,log(dataset$pressure))
cor(dataset$teg,dataset$pressure)
cor(dataset$teg,dataset$pressure)
cor(log(dataset$teg),dataset$pressure)
cor(log(dataset$teg),dataset$temp)
lm(teg ~ temp + pressure, dataset)
fitLin = lm(teg ~ temp + pressure, dataset)
summary(fitLin)
fitLin = lm(teg ~ temp + log(pressure), dataset)
summary(fitLin)
fitLin = lm(teg ~ log(temp) + log(pressure), dataset)
summary(fitLin)
iplot(dataset$Y,fitLin$fitted.values)
iplot(dataset$teg,fitLin$fitted.values)
fitLin = lm(teg ~ temp + pressure, dataset)
summary(fitLin)
iplot(dataset$teg,fitLin$fitted.values)
fitLin = lm(teg ~ log(log(temp)) + log(log(pressure)), dataset)
summary(fitLin)
iplot(dataset$teg,fitLin$fitted.values)
fitLin = lm(log(teg) ~ temp + pressure, dataset)
summary(fitLin)
iplot(log(dataset$teg),fitLin$fitted.values)
fitLin = lm(exp(teg) ~ temp + pressure, dataset)
summary(fitLin)
iplot(exp(dataset$teg),fitLin$fitted.values)
fitLin = lm(exp(teg) ~ log(temp) + log(pressure), dataset)
summary(fitLin)
iplot(exp(dataset$teg),fitLin$fitted.values)
source('C:/Users/Daniel/Dropbox/Documentos/gRupo/JNGSE_ABCoptim/R/boot_lm.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
setwd("C:/Users/Daniel/Dropbox/Documentos/gRupo/JNGSE_ABCoptim/R")
dataset <- read.delim("../data/TEGDataAlirezabahadori.csv", sep=",")
colnames(dataset) <- c("pressure", "temp", "teg")
dataset = subset(dataset,teg > 0.97)
dataset_norm = data.frame(apply(dataset,2, scale))
library(ggplot2)
library(iplots)
source("../R/00_load_and_normalize.R")
dataset <- read.delim("../data/TEGDataAlirezabahadori.csv", sep=",")
colnames(dataset) <- c("pressure", "temp", "teg")
dataset = subset(dataset,teg > 0.97)
dataset_norm = data.frame(apply(dataset,2, scale))
iplot(dataset$pressure,dataset$temp,"P","T")
iplot(dataset$pressure,dataset$teg,"P","Y")
iplot(dataset$temp,dataset$teg,"T","Y")
summary(dataset)
library(nnet)
help(nnet)
fitNnet = nnet(teg~temp+pressure, data=testdata, size=11, linout = T)
fitNnet = nnet(teg~temp+pressure, data=dataset, size=11, linout = T)
summay(fitNnet)
summary(fitNnet)
fitNnet$fitted.values
fitNnet$fitted.values
dataset$teg
dataset$teg - fitNnet$fitted.values
fitNnet = nnet(teg~temp+pressure, data=dataset, size=3, linout = T)
summary(fitNnet)
fitNnet$fitted.values
fitNnet = nnet(teg~temp+pressure, data=dataset_norm, size=3, linout = T)
fitNnet = nnet(teg~temp+pressure, data=dataset_norm, size=3, linout = T,maxit = 1e5)
fitNnet = nnet(teg~temp+pressure, data=dataset_norm, size=3, linout = T,maxit = 1e5)
fitNnet = nnet(teg~temp+pressure, data=dataset_norm, size=3, linout = T,maxit = 1e5)
fitNnet = nnet(teg~temp+pressure, data=dataset_norm, size=3, linout = T,maxit = 1e5)
summary(fitNnet)
fitNnet$fitted.values
fitNnet$fitted.values
- dataset_norm$teg
fitNnet$fitted.values - dataset_norm$teg
(fitNnet$fitted.values - dataset_norm$teg)*sd(dataset$teg)
fitNnet = nnet(teg~temp+pressure, data=dataset_norm, size=11, linout = T,maxit = 1e5)
(fitNnet$fitted.values - dataset_norm$teg)*sd(dataset$teg)
hist((fitNnet$fitted.values - dataset_norm$teg)*sd(dataset$teg))
fitNnet = nnet(teg~temp+pressure, data=dataset_norm, size=2, linout = T,maxit = 1e5)
fitNnet = nnet(teg~temp+pressure, data=dataset_norm, size=2, linout = T,maxit = 1e5)
hist((fitNnet$fitted.values - dataset_norm$teg)*sd(dataset$teg))
fitNnet = nnet(teg~temp+pressure, data=dataset_norm, size=3, linout = T,maxit = 1e5)
hist((fitNnet$fitted.values - dataset_norm$teg)*sd(dataset$teg))
help(nlm)
help(glm)
help(glm)
help(nls)
nls(teg ~ ct*temp + cp*pressure , dataset)
nls(teg ~ ct*temp + cp*pressure , dataset,algorithm = "BFGS")
nls(teg ~ ct*temp + cp*pressure , dataset)
summary(nls)
fitNls = nls(teg ~ ct*temp + cp*pressure , dataset)
summary(fitNls)
fitNls = nls(teg ~ c + ct*temp + cp*pressure , dataset)
summary(fitNls)
fitNls = nls(teg ~ c + ct*temp + cp*pressure , dataset, start = list(c = 1, ct = 0.05, cp = 0.05))
summary(fitNls)
fitLin = lm(exp(teg) ~ log(temp) + log(pressure), dataset)
summary(fitLin)
summary(fitNls)
summary(fitLin)
mean(abs((fitNnet$fitted.values - dataset_norm$teg)*sd(dataset$teg)))
y = f(t) + g(p,t)
fitNls = nls(teg ~ c + ct*temp + cp*pressure , dataset, start = list(c = 1, ct = 0.05, cp = 0.05))
summary(fitNls)
mean(abs(fitNls$data))
fitNls$m
fitNls$convInfo
fitNls$data
fitNls$control
summary(fitNls)
predict(fitNls,dataset)
predict(fitNls,dataset) - dataset$teg
mean(abs(predict(fitNls,dataset) - dataset$teg))
mean(abs(predict(fitNls,dataset) - dataset$teg))
summary(fitNls)
sum(abs(predict(fitNls,dataset) - dataset$teg))/(nrow(92))
sum(abs(predict(fitNls,dataset) - dataset$teg))/(92)
mean(abs(predict(fitNls,dataset) - dataset$teg))
avg(abs(fitLin$fitted.values - dataset$teg))
mean(abs(fitLin$fitted.values - dataset$teg))
fitLin$fitted.values
fitLin = lm(teg ~ temp + pressure, dataset)
summary(fitLin)
mean(abs(fitLin$fitted.values - dataset$teg))
mean(abs(predict(fitNls,dataset) - dataset$teg))
summary(fitLin)
fitNls = nls(teg ~ c + ct*temp^ct2 + cp*pressure , dataset, start = list(c = 1, ct = 0.005,ct2 = 1, cp = 0.005))
summary(fitNls)
2^4
fitNls = nls(teg ~ c + ct*temp^ct2 + cp*pressure , dataset, start = list(c = 1, ct = 0.005, ct2 = 1, cp = 0.005))
summary(fitNls)
fitNls = nls(teg ~ c + ct*temp^ct2 + cp*pressure , dataset, start = list(c = 1, ct = 0.005, ct2 = 1, cp = 0.005))
fitNls = nls(teg ~ c + ct*temp^ct2 + cp*pressure , dataset, start = list(c = 1, ct = 0.005, ct2 = 1, cp = 0.005),trace=T)
fitNls = nls(teg ~ c + ct*temp^ct2 + cp*pressure , dataset, start = list(c = 1, ct = 0.005, ct2 = 1, cp = 0.005),trace=T,maxit = 1000)
fitNls = nls(teg ~ c + ct*temp^ct2 + cp*pressure , dataset,
start = list(c = 1, ct = 0.005, ct2 = 1, cp = 0.005),trace=T,
control=nls.control(maxiter=5000))
nls(teg ~ c + ct*temp^ct2 + cp*pressure , dataset,
start = list(c = 1, ct = 0.005, ct2 = 1, cp = 0.005),trace=T,
control=nls.control(maxiter=5000))
fitNls = nls(teg ~ c + ct*temp^ct2 + cp*pressure , dataset,
start = list(c = 1, ct = 0.005, ct2 = 1, cp = 0.005),trace=T,
control=nls.control(maxiter=5000,methos="BFGS"))
fitNls = nls(teg ~ c + ct*temp^ct2 + cp*pressure , dataset,
start = list(c = 1, ct = 0.005, ct2 = 1, cp = 0.005),trace=T,
control=nls.control(maxiter=5000,method="BFGS"))
fitNls = nls(teg ~ c + ct*temp^ct2 + cp*pressure , dataset,
start = list(c = 1, ct = 0.005, ct2 = 1, cp = 0.005),trace=T,
control=nls.control(maxiter=5000,minFactor=1/2048))
fitNls = nls(teg ~ c + ct*temp^ct2 + cp*pressure , dataset,
start = list(c = 1, ct = 0.005, ct2 = 1, cp = 0.005),trace=T,
control=nls.control(maxiter=5000,minFactor=1/1e7))
fitNls = nls(teg ~ c + ct*temp^ct2 + cp*pressure , dataset,
start = list(c = 1, ct = 0.005, ct2 = 1, cp = 0.005),trace=T,
control=nls.control(maxiter=50000,minFactor=1/1e7))
fitNls = nls(teg ~ c + ct*temp^ct2 + cp*pressure , dataset,
start = list(c = --2e2, ct = 2e2, ct2 = 2e-4, cp = 2e-4),trace=T,
control=nls.control(maxiter=50000,minFactor=1/1e7))
fitNls = nls(teg ~ c + ct*temp^ct2 + cp*pressure , dataset,
start = list(c = 1.5e2, ct = 1.5e2, ct2 = 5e-4, cp = 1.5e-4),trace=T,
control=nls.control(maxiter=500000,minFactor=1/1e7))
fitNls = nls(teg ~ c + ct*temp^ct2 + cp*pressure , dataset,
start = list(c = -1.5e2, ct = 1.5e2, ct2 = 5e-4, cp = 1.5e-4),trace=T,
control=nls.control(maxiter=500000,minFactor=1/1e7))
fitNls = nls(teg ~ c + ct*temp^ct2 + cp*pressure , dataset,
start = list(c = -2e2, ct = 2e2, ct2 = 2e-4, cp = 2e-4),trace=T,
control=nls.control(maxiter=50000,minFactor=1/1e7))
fitNls = nls(teg ~ c + ct*temp^ct2 + cp*pressure , dataset,
start = list(c = 2e2, ct = 2e2, ct2 = 2e-4, cp = 2e-4),trace=T,
control=nls.control(maxiter=50000,minFactor=1/1e7))
summary(fitLin)
mean(abs(fitLin$fitted.values - dataset$teg))
fitNls = nls(teg ~ c + ct*temp^ct2 + cp*pressure^(cp2*temp) , dataset,
start = list(c = 2e2, ct = 2e2, ct2 = 2e-4, cp = 2e-4, cp2 = 1),trace=T,
control=nls.control(maxiter=5000,minFactor=1/1e7))
fitNls = nls(teg ~ c + ct*temp^ct2 + cp*pressure^(cp2*temp) , dataset,
start = list(c = 2e2, ct = 2e2, ct2 = 2e-4, cp = 2e-4, cp2 = 1e-5),trace=T,
control=nls.control(maxiter=5000,minFactor=1/1e7))
fitNls = nls(teg ~ c + ct*temp^ct2 + cp*(pressure^cp2)*(temp^ct3) , dataset,
start = list(c = 2e2, ct = 2e2, ct2 = 2e-4, cp = 2e-4, ct2 = 1e-5 ,ct3 = 1e-5),trace=T,
control=nls.control(maxiter=5000,minFactor=1/1e7))
fitNls = nls(teg ~ c + ct*temp^ct2 + cp*(pressure^cp2)*(temp^ct3) , dataset,
start = list(c = 2e2, ct = 2e2, ct2 = 2e-4, cp = 2e-4, cp2 = 1e-5 ,ct3 = 1e-5),trace=T,
control=nls.control(maxiter=5000,minFactor=1/1e7))
fitNls = nls(teg ~ c + ct*temp^ct2 + cp*(pressure^cp2)*(temp^ct3) , dataset,
start = list(c = 2e2, ct = 2e2, ct2 = 2e-4, cp = 2e-4, cp2 = 1/50 ,ct3 = 1/200),trace=T,
control=nls.control(maxiter=5000,minFactor=1/1e7))
fitNls = nls(teg ~ c + ct*temp^ct2 + cp*(pressure^cp2)*(temp^ct3) , dataset,
start = list(c = 2e2, ct = 2e2, ct2 = 2e-4, cp = 2e-4, cp2 = 1/50 ,ct3 = 1/200),trace=T,
control=nls.control(maxiter=500000,minFactor=1/1e7))
fObj = function(c){
v = mith(dataset,c[1] + c[2]*temp^c[3])
sum((v-dataset$teg)^2)
}
fObj = function(c){
v = with(dataset,c[1] + c[2]*temp^c[3])
sum((v-dataset$teg)^2)
}
fObj(c(1,2,3))
fObj = function(c){
v = with(dataset,c[1] + c[2]*temp^c[3] + c[4]*pressure)
sum((v-dataset$teg)^2)
}
optim(fObj,1:4)
optim(1:4,fObj)
optim(c(2,2,-1,5),fObj)
help(optim)
optim(c(2,2,-1,5),fObj,control = list(maxit = 100))
optim(c(2,2,-1,5),fObj,control = list(maxit = 200))
optim(c(2,2,-1,5),fObj,method = "BFSG",control = list(maxit = 200))
optim(c(2,2,-1,5),fObj,method = "BFGS",control = list(maxit = 200))
fObj = function(c){
v = with(dataset,c[1] + c[2]*temp^c[3] + c[4]*pressure^c[5])
sum((v-dataset$teg)^2)
}
optim(c(2,2,-1,5,1),fObj,method = "BFGS",control = list(maxit = 200))
fObj = function(c){
v = with(dataset,c[1] + c[2]*temp^c[3] + c[4]*pressure^(temp*c[5]))
sum((v-dataset$teg)^2)
}
optim(c(2,2,-1,5,1),fObj,method = "BFGS",control = list(maxit = 200))
optim(c(2,2,-1,5,1/200),fObj,method = "BFGS",control = list(maxit = 200))
fObj = function(c){
v = with(dataset,c[1] + c[2]*temp^c[3] + c[4]*pressure)
sum((v-dataset$teg)^2)
}
optim(c(2,2,-1,5),fObj,method = "BFGS",control = list(maxit = 200))
fit = optim(c(2,2,-1,5),fObj,method = "BFGS",control = list(maxit = 200))
fit$value/nrow(dataset)
fObj(fit$par)
summary(fitLin)
sum((fitLin$fitted.values - dataset$teg)^2)
mean((fitLin$fitted.values - dataset$teg)^2)
sum(fitLin$fitted.values - dataset$teg)^2)
sum((fitLin$fitted.values - dataset$teg)^2)
fit = optim(c(2,2,-1,5),fObj,method = "BFGS",control = list(maxit = 200,fnscale = 100))
fObj(fit$par)
fit = optim(c(2,2,-1,5),fObj,method = "BFGS",control = list(maxit = 200,fnscale = 1000))
fObj(fit$par)
fit = optim(c(2,2,-1,5),fObj,method = "BFGS",control = list(maxit = 200,fnscale = 100000))
fObj(fit$par)
fit = optim(c(2,2,-1,5),fObj,method = "BFGS",control = list(maxit = 200,fnscale = 100, ndeps = 1e-7))
fit = optim(c(2,2,-1,5),fObj,method = "BFGS",control = list(maxit = 200,fnscale = 100, ndeps = 1e-5))
fit = optim(c(2,2,-1,5),fObj,method = "BFGS",control = list(maxit = 200,fnscale = 100, ndeps = 1))
fit = optimHess(c(2,2,-1,5),fObj,method = "BFGS",control = list(maxit = 200,fnscale = 100,))
fit = optim(c(2,2,-1,5),fObj,method = "BFGS",control = list(maxit = 20000,fnscale = 100,))
fit = optim(c(2,2,-1,5),fObj,method = "BFGS",control = list(maxit = 20000,fnscale = 100))
fObj(fit$par)
sum(((fitNnet$fitted.values - dataset_norm$teg)*sd(dataset$teg))^2)
sum((fitLin$fitted.values - dataset$teg)^2)
fit
fit = optim(c(2,2,-1,5),fObj,method = "BFGS",control = list(maxit = 200000,fnscale = 100))
fit
fObj(fit$par)
fObj = function(c){
v = with(dataset,c[1] + c[2]*temp^c[3] + c[4]*pressure^c[5])
sum((v-dataset$teg)^2)
}
fit = optim(c(1,2,-2,1e-3,1),fObj,method = "BFGS",control = list(maxit = 200,fnscale = 100, trace = T))
fit = optim(c(1,2,-2,1e-3,1),fObj,method = "BFGS",control = list(maxit = 200,fnscale = 1, trace = T))
fit = optim(c(1,2,-2,1e-3,1),fObj,method = "BFGS",control = list(maxit = 200,fnscale = 1/1000, trace = T))
fit = optim(c(1,2,-2,1e-3,1),fObj,method = "BFGS",control = list(maxit = 200,fnscale = 1e-5, trace = T))
fObj(fit$par)
fit = optim(c(1,2,-2,1e-3,1),fObj,method = "BFGS",control = list(maxit = 200,fnscale = 1e-4, trace = T))
fObj(fit$par)
fit = optim(c(1,2,-2,1e-3,1),fObj,method = "BFGS",control = list(maxit = 20000,fnscale = 1e-4, trace = T))
fObj = function(c){
v = with(dataset,c[1] + c[2]*temp^c[3] + c[4]*pressure^c[5])
sum((v-dataset$teg)^2)
}
fit = optim(c(1,2,-2,1e-3,1),fObj,method = "BFGS",control = list(maxit = 20000,fnscale = 1e-4, trace = T))
fObj(fit$par)
fit
fObj = function(c){
v = with(dataset,c[1] + c[2]*temp^c[3] + c[4]*pressure^c[5]*temp^c[6])
sum((v-dataset$teg)^2)
}
fit = optim(c(1,2,-2,1e-3,1-1),fObj,method = "BFGS",control = list(maxit = 20000,fnscale = 1e-4, trace = T))
x0 = c(1,2,-2,1e-3,1-1)
fObj(x0)
x0 = c(1,2,-2,1e-3,1,-1)
fObj(x0)
fit = optim(x0,fObj,method = "BFGS",control = list(maxit = 20000,fnscale = 1e-4, trace = T))
fObj(fit$par)
fObj = function(c){
v = with(dataset,c[1] + c[2]*temp^c[3] + c[4]*pressure^(c[5]*temp^c[6]) )
sum((v-dataset$teg)^2)
}
x0 = c(1,2,-2,1e-3,1,-1)
fit = optim(x0,fObj,method = "BFGS",control = list(maxit = 20000,fnscale = 1e-4, trace = T))
fObj(fit$par)
fit
plot(fit$value)
plot(fit$par)
f = function(c){
with(dataset,c[1] + c[2]*temp^c[3] + c[4]*pressure^(c[5]*temp^c[6]) )
}
f = function(c){
with(dataset,c[1] + c[2]*temp^c[3] + c[4]*pressure^(c[5]*temp^c[6]) )
}
fObj = function(c){
sum( (f(c)-dataset$teg)^2 )
}
f(c)
f(x0)
f(fit$par)
plot(f(fit$par),dataset$teg)
#nls
f = function(c){
with(dataset,c[1] + c[2]*temp^c[3] + c[4]*pressure^c[5])
}
fObj = function(c){
sum( (f(c)-dataset$teg)^2 )
}
x0 = c(1,2,-2,1e-3,1)
fit = optim(x0,fObj,method = "BFGS",control = list(maxit = 20000,fnscale = 1e-4, trace = T))
plot(f(fit$par),dataset$teg)
plot(f(fit$par) - dataset$teg)
plot(fitLin$fitted.values,dataset$teg)
plot(fitNnet$fitted.values,dataset$teg)
plot((fitNnet$fitted.values+mean(dataset$teg))*sd(dataset$teg),dataset$teg)
plot( fitNnet$fitted.values*sd(dataset$teg) +mean(dataset$teg) ,dataset$teg)
sum((fitNnet$fitted.values - fitNnet$fitted.values*sd(dataset$teg) +mean(dataset$teg) )^2)
fitNnet$fitted.values*sd(dataset$teg) +mean(dataset$teg)
fitNnet = nnet(teg~temp+pressure, data=dataset, size=3, linout = T,maxit = 1e5)
fitNnet = nnet(teg~temp+pressure, data=dataset, size=11, linout = T,maxit = 1e5)
fitNnet = nnet(teg~temp+pressure, data=dataset, size=10, linout = T,maxit = 1e5)
fitNnet = nnet(teg~temp+pressure, data=dataset, size=3, linout = T,maxit = 1e5)
fitNnet = nnet(teg~temp+pressure, data=dataset, size=11, linout = T,maxit = 1e5)
sum( ( fitNnet$fitted.values - fitNnet$fitted.values )^2)
sum( ( fitNnet$fitted.values - dataset$teg )^2)
plot( fitNnet$fitted.values , dataset$teg)
fitNnet$fitted.values
fitNnet$fitted.values
sum( ( fitNnet$fitted.values - dataset$teg )^2)
fitNnet = nnet(teg~temp+pressure, data=dataset_norm, size=11, linout = T,maxit = 1e5)
fitNnet = nnet(teg~temp+pressure, data=dataset_norm, size=11, linout = T,maxit = 1e5)
predict = fitNnet$fitted.values*sd(dataset$teg)+dataset$teg
sum( ( predict - dataset$teg )^2)
plot( predict, dataset$teg)
sum( ( predict - dataset$teg )^2)
plot(fitLin$fitted.values,dataset$teg)
summary(fitLin)
sum((fitLin$fitted.values - dataset$teg)^2)
sum( ( predict - dataset$teg )^2)
f = function(c){
with(dataset,c[1] + c[2]*temp^c[3] + c[4]*pressure^(c[5] + c[6]*temp ) )
}
fObj = function(c){
sum( (f(c)-dataset$teg)^2 )
}
x0 = c(1,2,-2,1e-3,1,1e-3)
fit = optim(x0,fObj,method = "BFGS",control = list(maxit = 20000,fnscale = 1e-4, trace = T))
x0 = c(1,2,-2,1e-3,1,1e-3)
fit = optim(x0,fObj,method = "BFGS",control = list(maxit = 20000,fnscale = 1e-4, trace = T))
plot(f(fit$par),dataset$teg)
fObj(fit$value)
fObj(fit$par)
sum((fitLin$fitted.values - dataset$teg)^2)
sum( ( predict - dataset$teg )^2)
f = function(c){
with(dataset,c[1] + c[2]*temp^(c[3] + c[4]*pressure + c[5]*temp) + c[6]*pressure^(c[7] + c[8]*temp  + c[9]*pressure) )
}
x0 = rnorm()
x0 = rnorm(9)
fit = optim(x0,fObj,method = "BFGS",control = list(maxit = 20000,fnscale = 1e-4, trace = T))
x0 = rnorm(9)
fit = optim(x0,fObj,method = "BFGS",control = list(maxit = 20000,fnscale = 1e-4, trace = T))
x0 = c(1,1,0,0,0,1,0,0,0)
fit = optim(x0,fObj,method = "BFGS",control = list(maxit = 20000,fnscale = 1e-4, trace = T))
fObj(fit$par)
plot(f(fit$par),dataset$teg)
fit = optim(x0,fObj,method = "BFGS",control = list(maxit = 20000,fnscale = 1e-4, trace = T))
fObj(fit$par)
plot(f(fit$par),dataset$teg)
f(fit$par)
fObj(fit$par)
sum( ( predict - dataset$teg )^2)
predict
fit$par
f(x0)
dataset
f(fit$par)
fit$par
fit = optim(x0,fObj,method = "BFGS",control = list(maxit = 20000,fnscale = sd(dataset$teg), trace = T))
fObj(fit$par)
plot(f(fit$par),dataset$teg)
x0 = c(1,1,1,0,0,1,1,0,0)
fit = optim(x0,fObj,method = "BFGS",control = list(maxit = 20000,fnscale = sd(dataset$teg), trace = T))
fObj(fit$par)
fit = optim(x0,fObj,method = "BFGS",control = list(maxit = 20000,fnscale = sd(dataset$teg), trace = T))
fObj(fit$par)
plot(f(fit$par),dataset$teg)
fit = optim(x0,fObj,control = list(maxit = 20000,fnscale = sd(dataset$teg), trace = T))
fObj(fit$par)
plot(f(fit$par),dataset$teg)
library(ABcoptim)
install.packages("ABCoptim")
library(ABcoptim)
library(ABCoptim)
abc_optim(x0,fObj)
help(abc_optim)
abc_optim(fObj, D = 9)
fObj(x0)
abc_optim(x0,fObj, ub=10,lb=-10)
install.packages(" rgenoud")
install.packages("rgenoud")
library(rgenoud)
help(genoud)
genoud(fObj,9)
fit = genoud(fObj,9)
fit
fit$par
fObj(fit$par)
plot(f(fit$par),dataset$teg)
f(fit$par)
hacerCluster = function(n = nCPU,scripts = c("")){
libreria("doSNOW")
libreria("snow")
libreria("foreach")
cl = makeSOCKcluster(n,outfile="cl.txt")
registerDoSNOW(cl)
lapply(scripts, function(x) clusterCall(cl,source,x))
return(cl)
}
cl=hacerCluster(2)
hacerCluster = function(n = nCPU,scripts = c("")){
library("doSNOW")
library("snow")
library("foreach")
cl = makeSOCKcluster(n,outfile="cl.txt")
registerDoSNOW(cl)
lapply(scripts, function(x) clusterCall(cl,source,x))
return(cl)
}
cl=hacerCluster(2)
hacerCluster = function(n = nCPU,scripts = c("")){
library("doSNOW")
library("snow")
library("foreach")
cl = makeSOCKcluster(n,outfile="cl.txt")
registerDoSNOW(cl)
return(cl)
}
cl=hacerCluster(2)
fit = genoud(fObj,9,solution.tolerance=0.0001, optim.method = "BFGS",cluster=T)
fit = genoud(fObj,9,solution.tolerance=0.0001, optim.method = "BFGS",cluster=cl)
clusterExport(cl,ls())
fit = genoud(fObj,9,solution.tolerance=0.0001, optim.method = "BFGS",cluster=cl)
fObj(fit$par)
plot(f(fit$par),dataset$teg)
f = function(c){
with(dataset,c[1] + c[2]*temp^(c[3] + c[4]*pressure) + c[5]*pressure^(c[6]  + c[7]*pressure) )
}
fit = genoud(fObj,7,solution.tolerance=0.0001, optim.method = "BFGS",cluster=cl)
fObj(fit$par)
plot(f(fit$par),dataset$teg)
f = function(c){
with(dataset,c[1] + c[2]*temp^c[3] + c[4]*pressure^c[5] + c[6]*((pressure^c[7])*(temp^c[8]))^c[9]  )
}
x0 = c(1,0,1,0,1,0,0,0)
fit = optim(x0,fObj,control = list(maxit = 20000,fnscale = sd(dataset$teg), trace = T))
fit = optim(x0,fObj,method = "BFGS",control = list(maxit = 20000,fnscale = sd(dataset$teg), trace = T))
f(x0)
x0 = c(1,.001,1,.001,1,.001,.001,.001)
fit = optim(x0,fObj,method = "BFGS",control = list(maxit = 20000,fnscale = sd(dataset$teg), trace = T))
f(x0)
c = x0
with(dataset,c[1] + c[2]*temp^c[3] + c[4]*pressure^c[5] + c[6]*((pressure^c[7])*(temp^c[8]))^c[9]  )
with(dataset, c[1] + c[2]*temp^c[3] + c[4]*pressure^c[5]   )
with(dataset, c[1] + c[2]*temp^c[3] + c[4]*pressure^c[5] + c[6]*( (pressure^c[7]) )^c[9]  )
c[7]
with(dataset, c[1] + c[2]*temp^c[3] + c[4]*pressure^c[5] + c[6]*( (pressure^c[7])*(temp^c[8] ) )  )
c[9]
x0 = c(1,.001,1,.001,1,.001,.001,.001,0.001)
fit = optim(x0,fObj,method = "BFGS",control = list(maxit = 20000,fnscale = sd(dataset$teg), trace = T))
library(ABCoptim)
abc_optim(x0,fObj, ub=10,lb=-10)
x0 = abc_optim(x0,fObj, ub=10,lb=-10)$par
x0
x0 = abc_optim(x0,fObj, ub=10,lb=-10,maxCycle = 5000)$par
x0
fit = optim(x0,fObj,method = "BFGS",control = list(maxit = 20000,fnscale = sd(dataset$teg), trace = T))
fit
fit
fObj(fit$par)
plot(f(fit$par),dataset$teg)
clusterExport(cl,ls())
fit = genoud(fObj,9,solution.tolerance=0.0001, optim.method = "BFGS",cluster=cl)
fit = genoud(fObj,9,solution.tolerance=0.0001, optim.method = "BFGS")
fObj(fit$par)
plot(f(fit$par),dataset$teg)
plot(fitLin$fitted.values,dataset$teg)
plot( predict, dataset$teg)
fit$par
